name: Semantic Release

on:
  push:
    branches:
      - main
      - next

jobs:
  semantic-release:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      # - name: Set Outputs
      #   id: set_outputs
      #   run: |
      #     echo "tag_name=$(gh release view --json tagName --jq '.tagName')" >> $GITHUB_ENV
      #     echo "body=$(gh release view --json body --jq '.body')" >> $GITHUB_ENV
      #     echo "id=$(gh release view --json id --jq '.id')" >> $GITHUB_ENV
      #     echo "draft=$(gh release view --json isDraft --jq '.isDraft')" >> $GITHUB_ENV
      #     echo "prerelease=$(gh release view --json isPrerelease --jq '.isPrerelease')" >> $GITHUB_ENV

      - name: Log Release Details
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Release URL: $(gh release view --json url --jq '.url')"
          echo "Tag Name: $(gh release view --json tagName --jq '.tagName')"
          echo "Body: $(gh release view --json body --jq '.body')"
          echo "ID: $(gh release view --json id --jq '.id')"
          echo "Draft: $(gh release view --json isDraft --jq '.isDraft')"
          echo "Prerelease: $(gh release view --json isPrerelease --jq '.isPrerelease')"

  call-tauri:
    name: Call Tauri Workflow
    uses: ./.github/workflows/tauri.yml
    with:
      tag_name: $(gh release view --json tagName --jq '.tagName')
      body: $(gh release view --json body --jq '.body')
      id: $(gh release view --json id --jq '.id')
      draft: $(gh release view --json isDraft --jq '.isDraft')
      prerelease: $(gh release view --json isPrerelease --jq '.isPrerelease')
