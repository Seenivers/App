name: Release

on:
  push:
    branches:
      - main
      - next

jobs:
  semantic-release:
    name: Semantic Release

    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Set output variables
        id: set_output
        run: |
          echo "tag=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "releaseBody=$(cat CHANGELOG.md)" >> $GITHUB_ENV
          echo "releaseId=${{ steps.semantic_release.outputs.next_release.id }}" >> $GITHUB_ENV
          echo "releaseDraft=${{ steps.semantic_release.outputs.next_release.draft }}" >> $GITHUB_ENV
          echo "prerelease=${{ steps.semantic_release.outputs.next_release.prerelease }}" >> $GITHUB_ENV

  tauri-release:
    name: Tauri Release
    needs: semantic-release
    if: github.env.releaseId != ''

    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm install

      - name: Build and Publish Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ env.tag }}
          releaseName: 'App v${{ env.tag }}'
          releaseBody: ${{ env.releaseBody }}
          releaseId: ${{ env.releaseId }}
          releaseDraft: ${{ env.releaseDraft }}
          prerelease: ${{ env.prerelease }}
          args: ${{ matrix.args }}
